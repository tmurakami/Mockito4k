buildscript {
    ext.kotlin_version = '1.2.21'
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.15'
        classpath "gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:3.0.1"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3'
    }
}

apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'maven'
apply plugin: 'org.jetbrains.dokka'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'org.junit.platform.gradle.plugin'

apply from: "$rootDir/gradle/version.gradle"
apply from: "$rootDir/gradle/jacoco.gradle"

group = 'com.github.tmurakami'
version = version_name

ext.test_kotlin_version = properties['testKotlinVersion'] ?: kotlin_version

repositories {
    jcenter()
    maven { url 'https://dl.bintray.com/mockito/maven' }
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.1.61'
    compileOnly 'org.mockito:mockito-core:2.7.0'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$test_kotlin_version"
    testImplementation "org.mockito:mockito-core:${project.properties['testMockitoVersion'] ?: 'latest.release'}"
    def junitVersion = '5.0.3'
    testCompileOnly "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

ktlint {
    version = '0.15.1'
    outputToConsole = true
    reporters = ['CHECKSTYLE']
    ignoreFailures = System.getenv('CI') as boolean
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

dokka {
    skipDeprecated = true
    outputDirectory = javadoc.destinationDir
    processConfigurations = ['compile', 'compileOnly']
}
javadoc.dependsOn dokka as Object

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

jar.manifest.attributes 'Automatic-Module-Name': 'com.github.tmurakami.mockito4k'

compileKotlin.kotlinOptions { apiVersion = languageVersion = '1.1' }
compileTestKotlin.kotlinOptions { apiVersion = languageVersion = (test_kotlin_version =~ /\d+\.\d+/)[0] }

processTestResources {
    if (!project.hasProperty('usingInlineMockMaker')) exclude 'mockito-extensions/org.mockito.plugins.MockMaker'
}

dependencyUpdates.resolutionStrategy {
    componentSelection.all { if (candidate.version =~ /(?i)-(?:alpha|beta|rc|m)[-\d]?/) reject('Release candidate') }
}
